name: Server.Monitor.Health
description: |
  这是主服务器状况仪表盘。它显示在主屏幕上，并且默认启用。

  您可以编辑此工件以自定义服务器仪表盘。

  或者，您可以编辑“Server.Internal.Welcome”工件上的开始菜单。

type: SERVER_EVENT

sources:
  - name: Prometheus
    query: SELECT sleep(time=10000000) FROM scope()

reports:
  - type: SERVER_EVENT
    # Only allow the report to run for 10 seconds - this is plenty for
    # the GUI.
    timeout: 10
    parameters:
      - name: Sample
        default: "6"

    template: |
      {{ define "CPU" }}
          SELECT _ts as Timestamp,
              CPUPercent,
              MemoryUse / 1048576 AS MemoryUse,
              TotalFrontends
          FROM source(source="Prometheus",
                      artifact="Server.Monitor.Health")
      {{ end }}

      {{ define "CurrentConnections" }}
           SELECT * FROM sample(
             n=atoi(string=Sample),
             query={
               SELECT _ts as Timestamp,
                  client_comms_current_connections
               FROM source(source="Prometheus",
                           artifact="Server.Monitor.Health")
            })
      {{ end }}

      {{ $time := Query "SELECT timestamp(epoch=now()) AS Now FROM scope()" | Expand }}

      ## 服务器状态 @ {{ Get $time "0.Now"  }}

      <p>所有前端的总数据如下.</p>
          <span class="container">
            <span class="row">
              <span class="col-sm panel">
               CPU和内存利用率
               {{- Query "CPU" | LineChart "xaxis_mode" "time" "RSS.yaxis" 2 -}}
              </span>
              <span class="col-sm panel">
                当前连接的客户端
               {{- Query "CurrentConnections" | LineChart "xaxis_mode" "time" "RSS.yaxis" 2 -}}
              </span>
            </span>
      </span>

      ## 现有用户组

      {{ Query "LET ColumnTypes <= dict(ClientConfig='url_internal') \
                SELECT Name, OrgId, \
                       format(format='[%s](/notebooks/Dashboards/uploads/data/%%22%s/client.%s.config.yaml%%22)', \
                       args=[OrgId, ArtifactName, OrgId]) AS ClientConfig, \
                       upload(accessor='data', file=_client_config, \
                              name='client.'+OrgId+'.config.yaml') AS _Upload \
                FROM orgs() " | Table }}

      ## 磁盘空间

      {{ Query "SELECT * FROM Artifact.Generic.Client.DiskSpace()" | Table }}

      ## 用户

      {{ define "UserPermissions" }}
        SELECT name, effective_policy AS _EffectivePolicy,
               join(array=roles, sep=", ") AS Roles
        FROM gui_users()
      {{ end }}

      {{ Query "UserPermissions" | Table }}

